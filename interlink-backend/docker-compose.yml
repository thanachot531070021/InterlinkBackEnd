version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: interlink
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres-init:/docker-entrypoint-initdb.d
    networks:
      - interlink-network

  # Redis (for future use - caching, sessions, queues)
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - interlink-network

  # MailHog (Email testing in development)
  mailhog:
    image: mailhog/mailhog:latest
    restart: always
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - interlink-network

  # Backend API (development)
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/interlink
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - JWT_REFRESH_SECRET=dev-refresh-secret-change-in-production
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - SMTP_USER=
      - SMTP_PASS=
    ports:
      - "3001:3001"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - db
      - redis
      - mailhog
    networks:
      - interlink-network

  # Adminer (Database management UI)
  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    networks:
      - interlink-network

volumes:
  postgres_data:
  redis_data:

networks:
  interlink-network:
    driver: bridge